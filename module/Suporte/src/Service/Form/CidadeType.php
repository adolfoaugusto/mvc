<?php
/**
 * Created by PhpStorm.
 * User: jonantah
 * Date: 31/08/18
 * Time: 17:35
 */

namespace Rtd\Suporte\Service\Form;


use Helpers\Formulario\FormType;
use Rtd\Suporte\Entity\Central\Cidades;
use Rtd\Suporte\Entity\Central\Estados;
use Sistema\Exception\SistemaException;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\CollectionType;
use Symfony\Component\Form\Extension\Core\Type\HiddenType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;


class CidadeType extends FormType
{

    public function buildForm(FormBuilderInterface $builder, array $options)
    {

        return $builder
            ->add('cidadeId',ChoiceType::class,[
                'label'=>'Cidades',
                'choices'=>$this->carregaCidades($builder->getData()),
                'attr'=>[
                    'id'=>'idCidade',
                    'required'=>'required',
                ]
            ]);
    }


    public function configureOptions(OptionsResolver $resolver)
    {

        $resolver->setDefaults([
            'data_class'=>Cidades::class,
            'idCidade'=>null,
        ]);

        parent::configureOptions($resolver); // TODO: Change the autogenerated stub
    }

    private function carregaCidades($idCidade){

        /**
         * Em caso de Apenas Cadastro
         */
        if(!$idCidade instanceof Cidades){
            return [];
        }

        /**
         * @var Estados;
         */

        $cidades = $this->getDoctrine()->getRepository(Cidades::class)->findBy(['estado'=>$idCidade->getEstado()]);


        $cidadesColections = [];
        /**
         * @var Cidades $cidade
         */
        foreach($cidades as $cidade){

            $cidadesColections[$cidade->getDescCidade()] = $cidade->getCidadeId();
        }
        return $cidadesColections;

    }


}