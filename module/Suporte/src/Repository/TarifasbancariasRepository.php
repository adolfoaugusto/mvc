<?php

namespace Rtd\Suporte\Repository;

use Doctrine\ORM\EntityRepository;
use Helpers\ValidatorForm\ValidacaoTrait;
use Rtd\Suporte\Entity\Financeiro\TarifasBancarias;
use Rtd\Suporte\Repository\Interfaces\TarifasBancariasRepositoryInterface;
use Sistema\Exception\SistemaException;

/**
 * TarifasbancariasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class TarifasbancariasRepository extends EntityRepository implements TarifasBancariasRepositoryInterface
{

    use ValidacaoTrait;

    /**
     * @param array $dados
     * @return null|object|TarifasBancarias
     * @throws \Doctrine\ORM\ORMException
     * @throws \Doctrine\ORM\OptimisticLockException
     * @throws \Sistema\Exception\ValidacaoException
     */
    public function salvar($dados = []){

        $tarifasBancarias = null;


        if(is_int($dados['id'])){
            $tarifasBancarias  = $this->find($dados['id']);
        }

        if(is_null($tarifasBancarias)){
            $tarifasBancarias = new TarifasBancarias();
            $this->getEntityManager()->persist($tarifasBancarias);
        }

        $descricao = filter_var($dados['descricao'],FILTER_SANITIZE_STRING);
        
        $tarifasBancarias->setDescricao($descricao);

        $this->validarSubject($tarifasBancarias);

        $this->getEntityManager()->flush($tarifasBancarias);

        return $tarifasBancarias;
    }

    public function deletar($id){

        $dados = $this->find($id);

        if(is_null($id)){
            throw  new SistemaException('Tarifa não encontrada, não é possível excluí-la!');
        }

        $this->getEntityManager()->remove($dados);
        $this->getEntityManager()->flush();

        return $dados;

    }

    public function editar($id){

        $dados = $this->find($id);

        if(is_null($dados)){
            throw  new SistemaException('tarifa Bancária não encontrada!');
        }

        return $dados;


    }

}
